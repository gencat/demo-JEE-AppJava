<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
            http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
            http://www.springframework.org/schema/aop 
			http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
			http://www.springframework.org/schema/context 
			http://www.springframework.org/schema/context/spring-context-4.1.xsd">


	<!--
		Activates various annotations to be detected in bean classes: Spring's
		@Required and @Autowired, as well as JSR 250's @PostConstruct,
		@PreDestroy and @Resource (if available) and JPA's @PersistenceContext
		and @PersistenceUnit (if available).
		
		Permet a les aplicacions anotar les diferents classes de serveis i Managed Beans
		de JSF per evitar definir el bean en el xml de Spring.
		
		@Component("statusBean")
		@Scope("singleton")  
		public class CheckStatusBean {
			......
			......
		}
	-->
    <context:annotation-config/>
    <context:component-scan base-package="cat.gencat.canigojsf.bean" />
    <context:component-scan base-package="cat.gencat.canigojsf.service" /> 

</beans>